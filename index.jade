doctype html

html
  head
    title let's make some triangles
    
    style.
      html, body {
        width: 100%;
        height: 100%;
        margin: 0;
      }
      
      #triangles {
        position: absolute;
        height: 100%;
        width: 100%;
      }
  
  body
    canvas#triangles
    
    script#colors.
      var aquaish = '#55aaaa'
      var pastelPurple = '#aa55aa'
  
    script#triangle-math.
      function triangleHeightFromSideLength (l) {
        var l2 = Math.pow(l, 2)
        return Math.sqrt(3/4 * l2) | 0
      }
    
    script.
      var canvas = document.getElementById('triangles')
      
      function resizeCanvas () {
        canvas.width  = window.innerWidth
        canvas.height = window.innerHeight
      }
      
      resizeCanvas()

      var ctx = canvas.getContext('2d')
      ctx.imageSmoothingEnabled = false
      //ctx.translate(0.5, 0.5)
      
      // NOTE(jordan): equilateral
      function triangle (pen, x, y, base, height, color) {
        pen.beginPath()
        pen.moveTo(x, y)
        pen.lineTo(x + base/2, y - height)
        pen.lineTo(x + base, y)
        pen.fillStyle = color
        pen.fill()
      }
      
      var side = 150
      var height = triangleHeightFromSideLength(side)
      var numTriangles = 2 + ((canvas.width / side) | 0)
      var baseX = -side/2, baseY = -height
      
      function resize () {
        resizeCanvas()
        numTriangles = 2 + ((canvas.width / side) | 0)
      }
      
      function drawTriangles (startX, startY) {
        for (var j = 0; j <= numTriangles; j++) {
          for (var i = 0; i <= numTriangles; i++) {
            var x = startX + i * side
            var y = startY + j * 2 * height
            
            triangle(ctx, x, y, side, height, aquaish)
            triangle(ctx, x, y, side, -height, aquaish)
            
            ctx.save()
            
            ctx.translate(side/2, height)
            
            triangle(ctx, x, y, side, height, pastelPurple)
            triangle(ctx, x, y, side, -height, pastelPurple)
            
            ctx.restore()
          }
        }
      }

      var t = Date.now()
      drawTriangles(baseX, baseY)

      var x = baseX
      var y = baseY
      
      var xdrift = 1
      var ydrift = -1

      function render () {
        // NOTE(jordan): lock down framerate ~ 60fps
        if (Date.now() - t >= 16) {
          t = Date.now()
          x = (x + xdrift) % (side) - (side)
          y = (y + ydrift) % (2 * height) - 2 * height
          drawTriangles(x, y)
        }
        xdrift = 10 * Math.sin(t / 800)
        ydrift = 10 * Math.sin(Math.PI / 2 + t / 1000)
        window.requestAnimationFrame(render)
      }

      window.requestAnimationFrame(render)
      window.addEventListener('resize', resize)
